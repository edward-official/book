- 맥락
  - x86-64 기계어를 배우기 전에 역사적 흐름을 살펴보며 이해를 돕는다.
  - 왜 기계 수준 코드를 공부해야 하는지에 대한 동기를 제공한다.

- 초기 컴퓨터 아키텍처
  - 1940~50년대: 진공관 기반, 명령어 집합 단순.
  - 프로그래머가 직접 어셈블리/기계어를 작성.

- 고수준 언어와 컴파일러의 등장
  - Fortran, C 등 고수준 언어 도입.
  - 프로그래머는 명령어를 직접 다루지 않아도 됨.
  - 그러나 실행은 여전히 기계어로 이뤄지므로 동작 원리 이해가 중요.

- x86 계열의 발전
  - 1978년 Intel 8086 → 16비트.
  - 1985년 Intel 80386 → 32비트(IA32).
  - 2003년 AMD → 64비트(x86-64).
  - 하위 호환성을 유지하며 발전.

- 학습 목적
  - C 코드가 어떻게 기계어로 번역되는지 이해.
  - 프로그램 성능, 보안(예: 버퍼 오버플로), 최적화와 연결.
  - 역사적 배경 이해 → 현재 아키텍처의 설계 이유 이해.
